# -*- coding: utf-8 -*-
"""longest palindromic substring of a given string.

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OHrU8hPUX9p7aqx2QehSSfgdqQAjPAww
"""

#15. Write a program that finds the longest palindromic substring of a given string.

def longestpalindrome(n):
    d=[[False for i in range(len(n))] for i in range(len(n))]
    for i in range(len(n)):
        d[i][i]=True
    maxlen=1
    start=0
    for j in range(2,len(n)+1):
        for i in range(len(n)-j+1):
            end=i+j
            if j==2:
                if n[i]==n[end-1]:
                    d[i][end-1]=True
                    maxlen=j
                    start=i
            else:
                if n[i]==n[end-1] and d[i+1][end-2]:
                    d[i][end-1]=True
                    maxlen=j
                    start=i
    return n[start:start+maxlen]
n=input("Enter a string : ")
print(longestpalindrome(n))

